// Build is for this Giter8 template

Global / onChangedBuildSource := ReloadOnSourceChanges


/*
 * These variables are used for the generation of GitHub Action workflows; the
 * workflows are used to verify that a generated Scala 3 sbt project is valid.
 *
 * The following workflow files:
 *
 *    ./github/workflows/ci.yml
 *    ./github/workflows/clean.yml
 *
 * were generated by invoking:
 *
 *    sbt githubWorkflowGenerate
 *
 * from within THIS project directory.
 */
ThisBuild / githubWorkflowPublishTargetBranches := Nil
ThisBuild / githubWorkflowScalaVersions := scalaVersions
ThisBuild / githubWorkflowJavaVersions := javaVersions
ThisBuild / githubWorkflowBuild := Seq(
  WorkflowStep.Run(
    name = Some("Create/Test/Run Scala 3 sbt Project: Locally"),
    commands = List(
      "sbt g8Test",
      s"pushd target/sbt-test/${projectName}/scripted",
      "sbt test run",
      "popd"
    )
  ),
  WorkflowStep.Run(
    name = Some("Create/Test/Run Scala 3 sbt Project: Import from THIS Repo"),
    commands = List(
      // Ensures that the current (THIS) repo is used for the workflow
      s"sbt new $${{ github.repository }} --name=${workflowProjectName}",
      s"pushd ${workflowProjectName}",
      "sbt test run",
      "popd"
    )
  )
)
lazy val workflowProjectName = "workflow-test-project"


/*
 * This command alias runs the tests provided in ./project/giter8.test, which
 * are used to locally verify the correctness of a generated sbt project.
 */
addCommandAlias("test", "g8Test")


lazy val scala212 = "2.12.17"
lazy val scalaVersions = Seq(scala212)
lazy val javaVersions = Seq("8", "11", "17").map(JavaSpec.temurin)
lazy val projectName = "scala3-template"


lazy val root = project.in(file("."))
  .settings(
    scalaVersion := scala212, // MUST use this scala version (for now)
    name := projectName,
    scriptedLaunchOpts ++= Seq(
      "-Xms1024m",
      "-Xmx1024m",
      "-XX:ReservedCodeCacheSize=128m",
      "-Xss2m",
      "-Dfile.encoding=UTF-8"
    ),
    crossScalaVersions := scalaVersions
  )
